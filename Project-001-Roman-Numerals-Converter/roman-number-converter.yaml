AWSTemplateFormatVersion: 2010-09-09

Description: |
  CloudFormation Template for Roman Numerals Converter Application.
  This template creates Python Flask Web Application on Amazon Linux 2 AMI
  LATEST EC2 Instance with custom security group
  allowing http connections on port 80 and SSH connection on port 22.
  Roman Numerals Converter Application is downloaded from Github
  repository, then installed on Flask.
  
Parameters:
  KeyName:
    Description: Enter the name of your Key Pair for ssh connection 
    Type: AWS::EC2::KeyPair::KeyName
  LatestAmiId:
    Type: 'AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>'
    Default: '/aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2'
  
Resources:
  MoztSecGroupForRomanNumbersProject:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: " Enable HTTP for Flask Web Server and SSH port to secure connection to my EC2" # Required
      GroupName: "String"
      SecurityGroupIngress: 
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
  MozWebServerHost:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref LatestAmiId
      InstanceType: t2.micro
      KeyName: !Ref KeyName
      SecurityGroupIds:
        - !Ref MoztSecGroupForRomanNumbersProject
      Tags:
        - Key: Name
          Value: !Sub Web Server of ${AWS::StackName}
      UserData:
        Fn::Base64: |
          #! /bin/bash
          yum update -y
          yum install python3
          pip3 install flask
          cd /home/ec2-user
          FOLDER="https://raw.githubusercontent.com/miracozturk/aws-projects/main/Project-001-Roman-Numerals-Converter"
          wget ${FOLDER}/app.py
          mkdir templates && cd templates
          wget ${FOLDER}/templates/index.html
          wget ${FOLDER}/templates/result.html
          cd ..
          python3 app.py
Outputs:
  InstancePrivateIp:
    Value: !Sub
      - Private Ip of EC2 is ${EC2PrivateIp}
      - EC2PrivateIp: !GetAtt MozWebServerHost.PrivateIp
  WebSiteURL:
    Value: !Sub
      - http://${PublicAddress}
      - PublicAddress: !GetAtt MozWebServerHost.PublicDnsName
